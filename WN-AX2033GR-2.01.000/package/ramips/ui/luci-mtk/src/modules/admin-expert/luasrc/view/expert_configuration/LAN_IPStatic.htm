<%
require "luci.sys"
require("luci.http").prepare_content("text/html")
local uci = require("luci.model.uci").cursor()
local i18n = require("luci.i18n")
local lang = uci:get("luci","main","lang") 
i18n.load("admin-core",lang)
i18n.setlanguage(lang)
-%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"  />
<title>.::Welcome to the Web-Based Configurator::.</title>
<link href="<%=media%>/css/expert.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="<%=media%>/js/baseJS.js" ></script>
<script language="JavaScript">
<%local dns_str = uci.get("dhcp","lan","lan_dns")%>
var dns_str="<%=dns_str%>";
<%local dns_op1,dns_op2,dns_op3 = string.match(dns_str,"([FromISPNonednsRelay0-9.]+),([FromISPNonednsRelay0-9.]+),([FromISPNonednsRelay0-9.]+)")%>
var dns1="0.0.0.0";
var dns2="0.0.0.0";
var dns3="0.0.0.0";

<%luci.sys.net.obtainDns(function(rt) %>
dns<%=rt.index%>="<%=rt.dns%>";
<%end)%>

/********************** 
Add by YiWei 20130409
Add a config parameter "staticipMAX".
Use this parameter to control max static dhcp ip number.
***********************/
<%
local staticipMAX = uci:get("dhcp","lan","staticipMAX")
if staticipMAX == nil then
	staticipMAX=8
end
%>

var show1=0;
var show2=0;
var show3=0;
function doFirDNSType( form , selected )
{

    	switch(selected)
    	{
        	case 2:
                	show1=0;
                       	form.sysFirDNSAddr.value=form.LAN_FirstDNS.options[selected].value;
                        form.sysFirDNSAddr.readOnly = true;
						form.sysFirDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 0:
                        show1=1;
                        form.sysFirDNSAddr.value=dns1;
                        form.sysFirDNSAddr.readOnly = true;
						form.sysFirDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;

        	case 3:
			show1=0;
                        form.sysFirDNSAddr.value="0.0.0.0";
                        form.sysFirDNSAddr.readOnly = true;
						form.sysFirDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 1:
			show1=0;
                        form.sysFirDNSAddr.readOnly = false;
						form.sysFirDNSAddr.style.color='black'; /*change string color be black*/
                        break;
        	default:
                	break;
    	}
}

function doSecDNSType( form , selected )
{

    	switch(selected)
    	{
        	case 2:
			show2=0;
                        form.sysSecDNSAddr.value=form.LAN_SecondDNS.options[selected].value;
                        form.sysSecDNSAddr.readOnly = true;
						form.sysSecDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 0:
                        if(  show1==0){
                                form.sysSecDNSAddr.value=dns1;
                                show1=1;
                                show2=0;
                        }
                        else if ( show1==1 ){
                                show2=1;
                        	form.sysSecDNSAddr.value=dns2;
                        }
                        form.sysSecDNSAddr.readOnly = true;
						form.sysSecDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 3:
			show2=0;
                        form.sysSecDNSAddr.value="0.0.0.0";
                        form.sysSecDNSAddr.readOnly = true;
						form.sysSecDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 1:
						show2=0;
                        form.sysSecDNSAddr.readOnly = false;
						form.sysSecDNSAddr.style.color='black'; /*change string color be black*/
                        break;
        	default:
                	break;
    	}
}


function doThirdDNSType( form , selected)
{

    	switch(selected)
    	{
        	case 2:
			show3=0;
			form.sysThirdDNSAddr.value=form.LAN_ThirdDNS.options[selected].value;
			form.sysThirdDNSAddr.readOnly = true;
			form.sysThirdDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
			break;
       	 	case 0:
			if(show1==0) {
				form.sysThirdDNSAddr.value=dns1;
				show1=1;
			}
			else if (show2==0){
				show2=1;
				form.sysThirdDNSAddr.value=dns2;
			}
			else{
				show3=1;
				form.sysThirdDNSAddr.value=dns3;
			}
                        form.sysThirdDNSAddr.readOnly = true;
						form.sysThirdDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 3:
			show3=0;
                        form.sysThirdDNSAddr.value="0.0.0.0";
                        form.sysThirdDNSAddr.readOnly = true;
						form.sysThirdDNSAddr.style.color='#D0D0D0'; /*change string color be gray*/
                        break;
        	case 1:
        		show3=0;
                        form.sysThirdDNSAddr.readOnly = false;
						form.sysThirdDNSAddr.style.color='black'; /*change string color be b*/
                        break;
        	default:
                        break;
    	}
}

function copyto()
{
	doFirDNSType( document.forms[0] , document.forms[0].LAN_FirstDNS.selectedIndex );
   	doSecDNSType( document.forms[0] , document.forms[0].LAN_SecondDNS.selectedIndex);
    doThirdDNSType( document.forms[0] , document.forms[0].LAN_ThirdDNS.selectedIndex);
}
/********************************************
Add by YiWei , use for "Cancel" button can 
correct reset dns value and type
*********************************************/ 
function do_init()
{

<%
	local dns_seclected = {}

	if dns_op1 == "FromISP" then
		dns_seclected[1] = 0
	elseif dns_op1 == "dnsRelay" then 
		dns_seclected[1] = 2
	elseif dns_op1 == "None" then
		dns_seclected[1] = 3
	else
		dns_seclected[1]= 1
	end
	if dns_op2 == "FromISP" then
		dns_seclected[2] = 0
	elseif dns_op2 == "dnsRelay" then 
		dns_seclected[2] = 2
	elseif dns_op2 == "None" then
		dns_seclected[2] = 3
	else
		dns_seclected[2] = 1
	end
	if dns_op3 == "FromISP" then
		dns_seclected[3] = 0
	elseif dns_op3 == "dnsRelay" then 
		dns_seclected[3] = 2
	elseif dns_op3 == "None" then
		dns_seclected[3]= 3
	else
		dns_seclected[3] = 1
	end
%>
	doFirDNSType( document.forms[0] , <%=dns_seclected[1]%> );
   	doSecDNSType( document.forms[0] , <%=dns_seclected[2]%>);
    doThirdDNSType( document.forms[0], <%=dns_seclected[3]%> );	
}

function doHexCheck(c)
{
      if ( (c >= "0") && (c <= "9") )
        return 1;
      else if ( (c >= "A") && (c <= "F") )
        return 1;
      else if ( (c >= "a") && (c <= "f") )
        return 1;

      return -1;
}

function HexToLower(c)
{
    
    switch (c) {
        case "A":
            return "a";
            break;
        case "B":
            return "b";
            break;
        case "C":
            return "c";
            break;
        case "D":
            return "d";
            break;
        case "E":
            return "e";
            break;
        case "F":
            return "f";
            break;
        default:
            return c;
            break;
            }
}

function doMACcheck(object)
{
      var szAddr = object.value;
      var len = szAddr.length;
      if ( len == 0 )
      {
        alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
        return false;
      }
      

      if ( len == 12 )
      {
        var newAddr = "";
        var i = 0;

        for ( i = 0; i < len; i++ )
        {
          var c = szAddr.charAt(i);
          
          if ( doHexCheck(c) < 0 )
          {
            alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
            return false;
          }
          c = HexToLower(c);
          if ( (i == 2) || (i == 4) || (i == 6) || (i == 8) || (i == 10) )
            newAddr = newAddr + ":";
            newAddr = newAddr + c;
        }
          if (newAddr == "00:00:00:00:00:00" ||  newAddr == "ff:ff:ff:ff:ff:ff")
          {
				alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
              return false;
          }
        object.value = newAddr;
        return;
      }
      else if ( len == 17 )
      {
        var i = 2;
        var c0 = szAddr.charAt(0);
        var c1 = szAddr.charAt(1);

        if ( (doHexCheck(c0) < 0) || (doHexCheck(c1) < 0) )
        {
          alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
          return false;
        }
        
        i = 2;
        while ( i < len )
        {
          var c0 = szAddr.charAt(i);
          var c1 = szAddr.charAt(i+1);
          var c2 = szAddr.charAt(i+2);  
          if ( (c0 != ":") || (doHexCheck(c1) < 0) || (doHexCheck(c2) < 0) )
          {
            alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
            return false;
          }
          i = i + 3;
        }
    
        i =0;
        var newAddr = "";
        while ( i < len )
        {
                 var c = szAddr.charAt(i);  
                 c = HexToLower(c);
                 newAddr = newAddr + c;
                 i++;		 
        }
         
        if (newAddr == "00:00:00:00:00:00" || newAddr == "ff:ff:ff:ff:ff:ff")
        {
				alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
               return false;
        }
        object.value = newAddr;
        return; 
      }
      else
      {
        alert("<%:DHCP_Error_1%>, MAC[" + szAddr + "]!!");
        return false;
      }
}

function chkisLANIP(address) {
		var IP = address;        
        IP = IP.replace(/ /g, "");
		<%local lan_ipaddr = uci.get("network","lan","ipaddr")%>
		LAN_IP="<%=lan_ipaddr%>";
		if(IP==LAN_IP)
			return true;
		else
			return false;
				
}

function chkIP(address) { 
        
		var IP = address;        
        IP = IP.replace(/ /g, "");
        var IPsplit = IP.split(".");
        if(IPsplit.length != 4) {
            alert("<%:IP_Error_3%> IP[" + address + "]!!");
            return false;
        }
        //check first,and last byte is zero
        if((IPsplit[0] == "0") || (IPsplit[3] == "0")){
            alert("<%:IP_Error_3%> IP[" + address + "]!!");
                return false;
        }
        for(i = 0; i < 4; i++)
		{
            if((isNaN(IPsplit[i])) || (IPsplit[i] == undefined) || (IPsplit[i] == "")) {
                alert("<%:IP_Error_3%> IP[" + address + "]!!");
                return false;
			} else{
				if((parseInt(IPsplit[i], 10) > 255) || (parseInt(IPsplit[i], 10) < 0)) {
					alert("<%:IP_Error_3%> IP[" + address + "]!!");
					return false;
				}
			}
		}
        return true;        
}


function CheckValue()
{
	var i;
	var j;

	
	
	for(i=1;i<=<%=staticipMAX%>;i++){
		var checkMac = document.getElementsByName("dhcp_static_mac" + i)[0].value;
		var checkIp = document.getElementsByName("dhcp_static_ip" + i)[0].value;
		if ((checkMac != "00:00:00:00:00:00" && checkIp == "0.0.0.0") || (checkMac == "00:00:00:00:00:00" && checkIp != "0.0.0.0")){
			alert("<%:DHCP_Error_1%>, MAC[" + checkMac + "] IP[" + checkIp + "]!!");
			return false;
		}
		if(checkMac == "" || checkIp == ""){
			alert("<%:DHCP_Error_1%>, MAC[" + checkMac + "] IP[" + checkIp + "]!!");
			return false;
		}
		
		if (checkMac != "00:00:00:00:00:00" && checkIp != "0.0.0.0"){
			if(false == chkIP(checkIp)){
				return false;
			}
			if(true == chkisLANIP(checkIp)){
				alert("<%:IP_Error_4%> IP[" + checkIp + "]!!");
				return false;
			}
			
			if(false == doMACcheck(document.getElementsByName("dhcp_static_mac" + i)[0])){
				return false;
			}
			
			
			for (j=i+1;j<=<%=staticipMAX%>;j++){
				var tempMac = document.getElementsByName("dhcp_static_mac" + j)[0].value;
				var tempIp = document.getElementsByName("dhcp_static_ip" + j)[0].value;
				
				if (tempMac != "00:00:00:00:00:00" && tempIp != "0.0.0.0"){
					if(checkMac == tempMac){
						alert("<%:DHCP_Error_2%>, [" + checkMac + "]!");
						return false;
					}
					
					if(checkIp == tempIp){
						alert("<%:DHCP_Error_3%>, [" + checkIp + "]!");
						return false;
					}
					
					if(false == chkIP(tempIp)){
						return false;
					}
					if(true == chkisLANIP(tempIp)){
						alert("<%:IP_Error_4%> IP[" + tempIp + "]!!");
						return false;
					}
					if(false == doMACcheck(document.getElementsByName("dhcp_static_mac" + j)[0])){
						return false;
					}
				}
			}
		}
	}
	
	if(document.DHCP_Add.LAN_FirstDNS.selectedIndex == 1){
		if(document.DHCP_Add.sysFirDNSAddr.value == ""){
			alert('<%:WAN_Error_12%>');
			return false;
		}
		if(false == chkIP(document.DHCP_Add.sysFirDNSAddr.value)){
			return false;
		} 
	}
	
	if(document.DHCP_Add.LAN_SecondDNS.selectedIndex == 1){
		if(document.DHCP_Add.sysSecDNSAddr.value == ""){
			alert('<%:WAN_Error_14%>');
			return false;
		}
		if(false == chkIP(document.DHCP_Add.sysSecDNSAddr.value)){
			return false;
		} 
	}
	
	if(document.DHCP_Add.LAN_ThirdDNS.selectedIndex == 1){
		if(document.DHCP_Add.sysThirdDNSAddr.value == ""){
			alert('<%:WAN_Error_16%>');
			return false;
		}
		if(false == chkIP(document.DHCP_Add.sysThirdDNSAddr.value)){
			return false;
		} 
	}
	showWebMessage( 1 , "<%:Message%>" , "<%:msg_config%>" );
	return true;
}

function path_msg_init(){
	showFullPath(' <%:Network%> > <%:DHCP_Server%> > <%:Advanced%>');
	showWebMessage( 0, '<%:Message%>', '<%:Ready%>');
}


</script>
</head>
<body onload="copyto();path_msg_init();">
<form method="post" name="DHCP_Add" action="<%=controller%>/expert/configuration/network/dhcpserver/ipstatic" onSubmit="return CheckValue()" >
<div id="tabs">
  <ul>
    <li><a href="<%=controller%>/expert/configuration/network/dhcpserver" title="<%:General%>"><span><%:General%> </span></a></li>
    <li class="hightline"><a title="<%:Advanced%>"><span><%:Advanced%></span></a></li>
    <li><a href="<%=controller%>/expert/configuration/network/dhcpserver/dhcptbl" title="<%:Client_List%>"><span><%:Client_List%></span></a></li>
  </ul>
  <br class="clearfloat" />
</div>
<!-- Tab -->
<div id="table">
  <ul>
    <li class="table_top"></li>
    <li class="table_content">
        <div class="data">
          <ul><div class="tableframe">
            <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" class="table_frame">
              <tr>
                <td><table width="100%" border="0" align="center" cellpadding="0" cellspacing="0">
                      <tr>
                        <td><table width="100%" border="0" align="center" cellpadding="0" cellspacing="0">
                            <tr>
                              <td><table width="100%" cellpadding="0" cellspacing="0" >
                                  <tr>
                                    <td height="26" colspan="3"><table width="100%" border="0" cellspacing="0" cellpadding="0">
                                        <tr>
                                          <td height="26" class="table_title"><%:Static_DHCP_Table%> </td>
                                        </tr>
                                    </table></td>
                                  </tr>
                                  <tr align="center"  class="top_font">
                                    <td width="35" >#</td>
                                    <td><%:MAC_Address%> </td>
                                    <td ><%:IP_Address%> </td>
                                  </tr>

								  <%
								  local dhcp_static_mac={}
								  local dhcp_static_ip={}								  
								  for i = 1,staticipMAX do
										local entry=nil
										uci:foreach("dhcp", "host", function( section )
											local mac_name="Static_DHCP_IP"..i
											if section.name == mac_name then
												entry = section[".name"]
											end
										end)
										if entry ~= nil then
											dhcp_static_mac[i]=uci:get("dhcp",entry,"mac")
											dhcp_static_ip[i]=uci:get("dhcp",entry,"ip")									
										end
										if dhcp_static_mac[i] == nil then
											dhcp_static_mac[i]="00:00:00:00:00:00"
										end
										if dhcp_static_ip[i] == nil then
											dhcp_static_ip[i]="0.0.0.0"
										end
								  %>
									<tr class="table_font" align="center">
										<td ><%=i%></td>
										<td><input maxlength="17" size="18" value=<%=dhcp_static_mac[i]%> name="dhcp_static_mac<%=i%>" /></td>
										<td><input maxlength="15" size="15" value=<%=dhcp_static_ip[i]%> name="dhcp_static_ip<%=i%>" /></td>
									</tr>
								<%end%>
                              </table></td>
                            </tr>
                        </table></td>
                      </tr>
                </table></td>
              </tr>
            </table>
            </div>
            <div class="space"></div>
            <div class="title"><%:DNS_Server%> </div>
            <div class="w_text">
              <ul>
                <li class="alltable"><%:DNS_Servers_Assigned_by_DHCP_Server%> </li>
              </ul>
            </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:First_DNS_Server%>  :</li>
                <li class="right_table">
                <%local lanIP = uci.get("network","lan","ipaddr")%>
		<select size="1" name="LAN_FirstDNS" onchange="copyto()">
		   <option value="00000000" <%if dns_op1== "FromISP" then%>selected="selected" <%end%> ><%:Obtained_From_ISP%></option>
                   <option value="00000001" <%if dns_op1~= "FromISP" and dns_op1~= "dnsRelay" and dns_op1~= "None" then%> selected="selected"<%end%> ><%:User_Defined%></option>
                   <option <%if lanIP then%>value="<%=lanIP%>"<%end%><%if dns_op1== "dnsRelay" then%> selected="selected"<%end%> ><%:DNS_Relay%></option>
                   <option value="00000003"<%if dns_op1== "None" then%> selected="selected"<%end%> ><%:None%></option>
                </select>
                <input maxlength="15" size="15"<%if dns_op1~= "FromISP" and dns_op1~= "dnsRelay" and dns_op1~= "None" then%> value="<%=dns_op1%>"<%elseif dns_op1== "dnsRelay" then%> value="<%=lanIP%>"<%else%> value="0.0.0.0"<%end%> name="sysFirDNSAddr" />
                </li>
              </ul>
	    </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:Second_DNS_Server%>  :</li>
                <li class="right_table">
                <select size="1" name="LAN_SecondDNS" onchange="copyto()">
		   <option value="00000000" <%if dns_op2== "FromISP" then%>selected="selected" <%end%> ><%:Obtained_From_ISP%></option>
                   <option value="00000001" <%if dns_op2~= "FromISP" and dns_op2~= "dnsRelay" and dns_op2~= "None" then%> selected="selected"<%end%> ><%:User_Defined%></option>
		   <option <%if lanIP then%>value="<%=lanIP%>"<%end%><%if dns_op2== "dnsRelay" then%> selected="selected"<%end%> ><%:DNS_Relay%></option>
		   <option value="00000003"<%if dns_op2== "None" then%> selected="selected"<%end%> ><%:None%></option>
                </select>
                <input maxlength="15" size="15"<%if dns_op2~= "FromISP" and dns_op2~= "dnsRelay" and dns_op2~= "None" then%> value="<%=dns_op2%>"<%elseif dns_op2== "dnsRelay" then%> value="<%=lanIP%>"<%else%> value="0.0.0.0"<%end%> name="sysSecDNSAddr" />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:Third_DNS_Server%>  :</li>
                <li class="right_table">
                <select size="1" name="LAN_ThirdDNS" onchange="copyto()">
                   <option value="00000000" <%if dns_op3== "FromISP" then%>selected="selected" <%end%> ><%:Obtained_From_ISP%></option>
                   <option value="00000001" <%if dns_op3~= "FromISP" and dns_op3~= "dnsRelay" and dns_op3~= "None" then%> selected="selected"<%end%> ><%:User_Defined%></option>
                   <option <%if lanIP then%>value="<%=lanIP%>"<%end%><%if dns_op3== "dnsRelay" then%> selected="selected"<%end%> ><%:DNS_Relay%></option>
                   <option value="00000003"<%if dns_op3== "None" then%> selected="selected"<%end%> ><%:None%></option>
                </select>		  
                <input maxlength="15" size="15"<%if dns_op3~= "FromISP" and dns_op3~= "dnsRelay" and dns_op3~= "None" then%> value="<%=dns_op3%>"<%elseif dns_op3== "dnsRelay" then%> value="<%=lanIP%>"<%else%> value="0.0.0.0"<%end%> name="sysThirdDNSAddr" />
                </li>
              </ul>
                    </div>
                        <div class="spaceair"></div>
        </ul>
      </div>
    </li>
     <li class="table_button">
      <div class="button">
        <center>
          <input name="sysSubmit" value="<%:Apply%>" type="submit" />
          &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
          <input name="Cancel" value="<%:Cancel%>" type="reset" onclick="do_init()"/>
        </center>
      </div></li>
  </ul>
</div>
</form>
</body>
</html>
